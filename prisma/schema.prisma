// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum ProductType {
  CUSTOM_ARTWORK
  STOCK_ARTWORK
  REPLICA_ARTWORK
}

model Artwork {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  mainImageUrl String  // URL de la imagen principal
  width       Int       // Ancho de la imagen principal en píxeles
  height      Int       // Alto de la imagen principal en píxeles
  order       Int       @unique
  createdAt   DateTime  @default(now())
  subImages   SubImage[] // Relación con las subimágenes
  medidas     String?   // Nuevo: Campo para las medidas
  tecnica     String?   // Nuevo: Campo para la técnica
  marco       String?   // Nuevo: Campo para el marco
}


model SubImage {
  id        Int      @id @default(autoincrement())
  artworkId Int      // ID de la obra de arte asociada
  imageUrl  String   // URL de la subimagen
  createdAt DateTime @default(now())
  artwork   Artwork  @relation(fields: [artworkId], references: [id])
}


model Testimonial {
  id          Int      @id @default(autoincrement())
  name        String   // Nombre del cliente
  testimonial String   // Testimonio del cliente
  rating      Int      // Calificación (1 a 5)
  createdAt   DateTime @default(now())
}

model StockArtwork {
  id            Int             @id @default(autoincrement())
  title         String
  description   String
  mainImageUrl  String
  width         Int
  height        Int
  price         Float
  stockQuantity Int
  order         Int             @default(0) // Campo para ordenar
  createdAt     DateTime        @default(now())
  subImages     StockSubImage[]
  medidas       String?
  tecnica       String?
  marco         String?
}

model StockSubImage {
  id              Int          @id @default(autoincrement())
  stockArtworkId  Int
  imageUrl        String
  createdAt       DateTime     @default(now())
  stockArtwork    StockArtwork @relation(fields: [stockArtworkId], references: [id])
}

model FramePrice {
  id     Int @id @default(autoincrement())
  width  Int
  height Int
  price  Int

  @@unique([width, height])
}
